
[참조] http://enigma777.egloos.com/3279360

@@ NFS


-> 파일시스템 공유와 서버자원 공유를 위해 1980년대 중반
   썬마이크로시스템즈에서 개발 됨.
-> 운영체제와 네트워크 구조가 달라도 파일 공유가 가능하게 됨.
-> 서버의 리소스를 클라이언트에서 마치 자신의 리소스를 사용하는것처럼 사용.
-> 스토리지가 고가였던 시절 디스크가 없는 시스템을 지원하기 위해
   개발되었으나 성능이 좋아지면서 파일공유 및 파일서버를 위한
   방법으로 사용되고 있음.
-> 인터넷 방송이나 스트리밍, 교육 사이트, 호스팅 서버등의 인터넷
   서비스를 할 경우에 파일시스템 공유나 부하분산을 위한 도구로 활용 가능.
-> Samba와 비슷하지만 커널에서 지원한다는 점에 특징임.
-> C/S 구조이며 NFS서버의 공유 파일시스템을 NFS클라이언트에서 마운트.
-> 보안이 취약하다는 단점이 있음.


! NFS 선행조건

-> portmap은 NFS를 사용하기 위한 필수 프로그램임.
-> portmap은 클라이언트로부터의 포트요청이 있을때 새로운 포트를
   할당해주고 맵핑해 주는 역할을 하게 됨. 
-> 웹서버/ftp서버와 같이 특정 포트로 listening하는것이 아니라
   portmapper라는 프로그램을 이용하여 네트워크 포트를 할당 받게 됨.
-> portmapper는 111번 포트를 점유하면서 listening하다가 접속요청이
   있으면 nfsd에게 포트를 바꾸어 접속 연결을 시켜주게 됨.


! 기본 구성 방식

-> TCP/IP 네트워크를 통한 서버와 클라이언트 연결
-> 서버는 클라이언트에 제공할 NFS 서비스 동작
-> 클라이언트는 공유된 파일시스템 마운트


! NFS 설치

-> CentOS 리눅스에는 NFS 서버 설정에 필요한 패키지인
   nfs-utils가 포함되어 있음. 
-> NFS는 RPC(Remote Procedure Call) 통신을 통해서 구현되는데
   이때 사용 하는 것이 portmapper 임. 즉 portmap 패키지 설치도 필요함.
# rpm -qa | grep nfs-utils
# rpm -qa | grep portmap
# portmap -p                      -> portmap 데몬 실행여부확인
# service nfs {start|stop|status} -> nfs 데몬 실행


<동작 원리>
1) NFS Service와 Portmap 서비스가 먼저 실행되어 있어야 함.
2) portmapper에 의해 해당 서비스 포트에 등록되어 있어야 함.
3) NFS Client의 접속 요청 대기.

                  portmap에게 포트 질의
RPC     <-----------------------------------------  RPC 
Server            NFS 서비스의 포트 알림             Client
        ----------------------------------------->
                  NFS 서비스로 접근
        <-----------------------------------------


! NFS 서버 설정 파일

/etc/exports              -> NFS 설정파일이며 기본적으로 비어있음.
[mnt_src_dir] [nfs_host_name | network(option)]     -> 기본 형식.

. mnt_src_dir-> 클라이언트에 서비스할 디렉토리 지정. 하위 디렉토리도 가능.
. nfs_host_name -> nfs를 허가할 /etc/hosts에 있는 클라이언트 호스트이름.
. network   -> /etc/hosts에 없는 클라이언트는 ip주소 또는 도메인으로 지정.
. option    -> 옵션값에 의해 nfs 공유디렉토리에 대한 접근 권한 설정.


</etc/exports 설정예시>

/nfs_data 192.168.0.1(rw,no_root_squash,sync) -> 단일 호스트 서비스.

/nfs_data 192.168.0.1(rw,no_root_squash,sync) 192.168.0.2(ro,no_root_squash,sync)
-> 다중 호스트 서비스.

/nfs_data 192.168.0.0/255.255.255.0(rw,no_root_squash,sync)
-> 특정 네트워크에 포함되어있는 모든 호스트에게 서비스.

/nfs_data *(rw,no_root_squash,sync)
-> 네트워크 도달 가능한 모든 호스트에 서비스.

/nfs_data *.naver.com(rw,no_root_squash,sync)
-> 도메인을 사용하는 네트워크 가능한 모든 호스트에 서비스.

<option>

ro            -> 읽기 전용으로 서비스
rw            -> 읽기/쓰기 서비스 가능
no_root_squash-> 클라이언트의 관리자가 접속요청시 관리자 계정으로 연결
root_squash   -> 클라이언트의 관리자가 접속요청시 익명 계정으로 연결
secure        -> 마운트 접속요청시 포트번호를 1024 이하로 오픈
insecure      -> 지정된 포트 이외 모든 포트를 통해 서비스 허용
sync          -> 쓰기 실행 후 디스크 동기화 수행
no_all_squash -> 클라이언트의 일반사용자가 접속요청시 동일한 사용자 계정으로 연결.
all_squash    -> 클라이언트의 일반사용자가 접속요청시 익명계정으로 연결
anonuid=[UID] -> 익명으로 접속요청시 지정한 UID값의 계정으로 연결
anongid=[GID] -> 익명으로 접속요청시 지정한 GID값의 그룹으로 연결
noaccess      -> 공유디렉토리내에서 접근 거부할 디렉토리 설정


! NFS 서버 상태확인

-> NFS 서비스가 성공할 수 있는지 exporting 점검

# exportfs -v  -> export 상태 확인

# exportfs -ra -> nfs 데몬 재시작 필요없이 변경내용 적용.


! NFS 클라이언트 상태확인

# rpcinfo -p [nfs_svr_ip] -> nfs 서버가 정상적으로 동작하는지 포트 확인
# rpcinfo -p 192.168.0.1

# mount -t nfs nfs_svr_ip:/svr_mnt_dir  /local_mnt_dir
# mount -t nfs 192.168.0.1:/nfs_data    /mnt_dir
# df -h

# vi /etc/fstab  -> 부팅시 자동으로 nfs 마운트하기 위해 등록.
nfs_svr_ip:/svr_mnt_dir   /local_mnt_dir   nfs   defaults   0 0
~
~
:wq


! Autofs

-> 사용시 파일시스템을 자동으로 mount하고 일정시간동안 사용치
   않으면 umount 하도록 해주는 자동 마운트 데몬.
-> 주로 nfs, cd-rom, floppy 등 자주 사용하지 않는 장치 마운트시 사용
-> 서버설정은 동일하므로 클라이언트 설정만 다룰것임.

# rpm -qa | grep autofs   -> 관련 패키지 설치여부 확인

# vi /etc/auto.master
/misc  /etc/auto.misc
-> /etc/auto.misc에 설정할 automount 디렉토리가 /misc 하위에
   자동생성되어 mount 됨.

# vi /etc/auto.misc
cd     -fstype=iso9660,ro,nosuid,nodev :/dev/cdrom
-> auto.master 파일에서 설정해준 디렉토리 하위의 실제 mount 될
   마운트포인트의 설정 파일.













