
[ITBANK Andylec 주말 리눅스 1 과정]

▣오늘의 수업내용(8일차)
패키지(package) 관리
압축 파일 관리

<패키지 관리>
패키지(Package) : 프로그램 파일이 들어있는 상자 개념

프로그램 배포 단위  
레드햇 리눅스 : rpm 패키지
데비안 리눅스 : debian 패키지

rpm 패키지 이름 구성
mc-4.6.0-2.i386.rpm
--->패키지이름-버전-아키텍처

명령어형식 : rpm  옵션  패키지명

옵션)
-qa      // 설치된 패키지 목록 확인 (q : query, a : all)
-e        // 삭제 (e : erase)
-ivh     // install
-Uvh    // Upgrade


설치 및 업그레이드시 옵션)
-v              // verbose, 설치과정 자세히 출력
-h, --hash   // # 마크 표시, 보통 v 옵션과 같이 사용
--nodeps    // 의존성을 검사하지 않음
--force       // --oldpackage, --replacefiles, --replacepkgs 를 합한 옵션
--test         // 실제 설치하지 않고 점검

rpm -qi     // 패키지 정보 (information)
rpm -qf     // 파일이 속한 패키지 출력(file)
rpm -ql     // 패키지 파일 목록(list, location)
rpm -qs    // 패키지 상태(status)
rpm -qc    // 패키지 설정 파일(configuration)

rpm 의 단점 : 의존성 문제(먼저 설치되어 있어야 하는 
패키지가 없는 경우 설치가 안 된다.)


[A 패키지]-------------------------------[B 패키지]
                   의존성(dependency)

yum :  인터넷 파일서버에서 패키지를 다운받아 설치해 준다.
         관련 패키지가 있을 경우 한꺼번에 설치해 준다.
         (의존성 문제 해결)
         인터넷이 되야 사용할 수 있다.


설정파일 : /etc/yum.conf
업데이트 서버의 URL 과 기타 세부적인 설정사항



yum  (-y)  install      // 설치
yum  check-update   // 업데이트 가능한 목록
yum  upgrade          // 업그레이드
yum  remove           // 삭제
yum  info                // 정보 출력
yum  list                  // 패키지 목록 출력
yum  grouplist         // 패키지 그룹 목록 출력
yum  groupinstall     // 패키지 그룹 설치
yum  search  단어     // 단어가 들어간 패키지 검색
yum  localinstall  또는  yum  install       // CD 의 패키지를 설치할 때 사용


사용 예 : yum  -y  install  mc
(-y 를 생략하면 설치시 질문이 출력된다.)

♠rpm 사용하기
(Redhat Package Manager)
	

#rpm  -qa
리눅스 CD 에 들어있는 프로그램 형태는 rpm 패키지로
rpm -qa 하게 되면 하드디스크에 설치된 rpm 패키지 목록이 
모두 출력된다.
q : query(질의하다)
a : all


#cd  /var/lib/rpm
(패키지 데이타베이스가 있는 디렉토리)
#ls


패키지(프로그램) 설치 유무 확인 방법 :
1)rpmquery  패키지명  패키지명  ...
2)rpm  -q  패키지명  패키지명  ...
3)rpm  -qa  |  grep  패키지명

#rpmquery  gzip
#rpm  -q  gzip
#rpm  -qa  |  grep  gzip

--->설치된 프로그램(패키지) 목록 중에서 gzip 관련 패키지만 필터링


gzip 패키지 삭제
#rpm  -e  gzip (rpm -e gzip-버전  으로 해도 동일하다.)
오류: Failed dependencies:
---> 다른 패키지와 의존성이 있어서 삭제가 안 된다.

#rpm  -e  --nodeps  gzip
의존성 무시하고 삭제하기

또는
#rpm  -e  gzip  --nodeps

#rpm  -q  gzip
#rpm  -qa  |  grep  gzip
gzip 패키지는 삭제했으므로 나타나지 않는다.

<리눅스 1 번 DVD에서 gzip 패키지를 찾은 후 /work 디렉토리로 복사하기>

#eject
--->마운트 해제후 CD 또는 DVD 배출 명령

#df  -h

리눅스 1번 CD 또는 DVD 입력
#df  -h
CD 마운트 확인
안되면 아래와 같이 수동 마운트
mount  /dev/cdrom  /mnt

#find  /media  -name  "*gzip*"
수동마운트의 경우에는 find  /mnt  -name  "*gzip*"

#cp  경로와파일명   /work


#cd  /work
#ls

#rpm  -qlp  gzip-버전.i686.rpm
패키지 파일 안의 목록 출력
p : 패키지를 뜻하며 패키지 파일을 이용할 때는 p 옵션을 지정해야 한다.


#rpm -ivh  gzip-버전.i686.rpm 
(rpm  -Uvh  gzip-버전.i686.rpm 해도 설치된다.)
--->패키지(리눅스 프로그램) 설치하기

#
rpm  -ivh  : 설치
rpm  -Uvh : 업그레이드(이전 버전이 있으면 업그레이드를 하고
                 설치가 안 되어 있으면 프로그램이 설치 됨)

#rpm  -q  gzip
#rpm  -qa  |  grep  gzip
gzip 패키지가 설치되었으므로 출력된다.

#rpm  -qs  gzip
패키지 상태 출력

//////////////////////////////////////////////////////////////////////////
#man  rpm
       -s     패키지 안에 든 화일의 상태를 보여준다.(-l은 포함) 각
              화일의 상태는 normal(정상), not installed(설치 되 지
              않음), replaced 다른 것으로 교체됨)의 값을 갖는다.
//////////////////////////////////////////////////////////////////////////

#rpm  -ql  gzip
설치된 특정 패키지의 파일목록 출력
설치가 된 후에는 패키지 목록 출력시 -p 옵션이 필요없고
rpm 확장자를 지정하면 안 된다.

#rpm  -qi  gzip
패키지 정보 확인

♠yum  사용하기
(인터넷의 파일서버를 이용하는 방식)

[리눅스 서버] <----- yum -----> [인터넷의 CentOS 프로그램 서버]

#rpm  -qa  |  grep  mc
mc 패키지(프로그램) 확인

#rpm  -qa  |  grep  '^mc-'


#yum  -y  install  mc 
mc 패키지 설치하기
-y 옵션을 생략하면 질문 나올 때 y 를 입력해 주어야 설치된다.

#rpm  -q  mc
mc  패키지 설치됨


#mc
mc 는 유틸리티 프로그램
종료는 exit 입력

#yum  info  mc
Setting up repositories
Reading repository metadata in from local files
Installed Packages
Name   : mc
Arch   : i386
Epoch  : 1
Version: 4.6.1
Release: 0.8.5
Size   : 4.2 M
Repo   : installed
Summary: User-friendly text console file manager and visual shell.

Description:
 Midnight Commander is a visual shell much like a file manager, only
with many more features. It is a text mode application, but it also
includes mouse support if you are running GPM. Midnight Commander's
best features are its ability to FTP, view tar and zip files, and to
poke into RPMs for specific files.
#

#yum  remove  mc
-y 옵션을 지정하지 않았으므로 질문이 출력된다.
(질문에 y 를 입력한다.)
rpm  -e  mc  로  삭제해도 된다.

yum 을 이용하면 의존성 있는 패키지까지 함께 삭제 된다.


#rpm  -q  mc

♠KDE Desktop
리눅스 윈도우 매니저

#yum  grouplist
#LANG=en_US.UTF-8
---> 영문 설정
#yum  grouplist
KDE Desktop

#yum  -y  groupinstall  "KDE Desktop"
---> 쿼팅 반드시 사용


-루트 로그아웃
-root 아이디 입력후 하단의 메뉴에서 KDE 선택
-암호 입력후 로그인


☞GUI 를 이용한 패키지 관리
1)리눅스 메뉴표시줄-시스템-관리-소프트웨어 추가/제거
2)#gpk-application


♠실습
1. gedit(메모장 프로그램) 패키지를 rpm 명령 이용하여 설치 확인후
rpm 명령 이용하여 제거 하기
2. 1번 DVD 이용하여 gedit 패키지를 /work 에 복사하기
(gedit-plugins 는 라이브러리로 설치할 필요 없음)
3. /work 디렉토리로 이동하여 gedit 패키지 설치하기
4. yum 명령 이용하여 gedit 제거하기
5. yum 명령 이용하여 gedit 설치하기
6. 웹브라우저 firefox 업그레이드
7. Web browser 패키지 검색하기


/////////////////////////////////////////////////////////////////////
#yum  list  firefox
#yum  upgrade  firefox
#yum  search  "Web browser"
#yum  install  elinks
#elinks
/////////////////////////////////////////////////////////////////////


<묶음과 압축 명령어>
1) tar(압축 기능은 없고 여러 개의 파일을 하나로 묶는 역할을 함)
   압축              압축해제
2) gzip              gunzip
3) bzip2            bunzip2

※tar 에서 gzip, bzip2 옵션이 지원 된다.

♠tar 명령어 형식
tar  옵션(-는 생략가능)  대상파일  원본파일
(cp 와는 반대이다.)

☞tar 는 압축은 하지 않고 여러 파일을 하나로 묶어주거나 해제하는 프로그램
☞tar 는 옵션을 줄 때 - 를 생략할 수 있다.
☞옵션의 순서는 변경해도 된다.(- 사용시 f 옵션은 마지막에 사용)
☞zxvf 대신 xvzf 를 사용해도 결과는 똑같다.

z : gzip 사용
x : extract (타르 해제)
v : verbose (자세히 출력)
f : file 지정
t : list 출력
c : create (타르 파일 생성)
j : bzip2 사용


//////////////////////////////////////////////////////

#man  tar
NAME
       tar - The GNU version of the tar archiving utility
 Operations:
       [-]A --catenate --concatenate
       [-]c --create
       [-]d --diff --compare
       [-]r --append
       [-]t --list
       [-]u --update
       [-]x --extract --get
       --delete
 Common Options:
       -C, --directory DIR
       -f, --file F
       -j, --bzip2
       -p, --preserve-permissions
       -v, --verbose
       -z, --gzip

 -p, --same-permissions, --preserve-permissions
              extract all protection information

//////////////////////////////////////////////////////



//////////////////////////////////////////////////////
<타르 파일과 타르.압축 파일의 생성 형식>
1)tar   cvf    파일명.tar 
--->tar

2)tar  cvzf    파일명.tar.gz 
--->tar + gzip

3)tar  cvjf    파일명.tar.bz2
--->tar + bzip2


<타르 파일과 타르.압축 파일의 해제 형식>
1)tar   xvf   파일명.tar
2)tar  xvzf   파일명.tar.gz
3)tar  xvjf   파일명.tar.bz2

압축된 tar 파일도 
tar  tvf  파일명.tar.gz 
tar  xvf  파일명.tar.gz 로 사용 가능
//////////////////////////////////////////////////////


♠tar 와 gzip 테스트

             /
             |
 +--------+-------+
tmp                boot

#tar   -cvf   /tmp/my1.tar   /boot
--->/boot 폴더의 모든 내용을 /tmp/my1.tar 파일로 저장
---> 점(.) 으로 시작하는 파일도 모두 저장 됨

#ls  /tmp/my*


#tar  c   /tmp/my2.tar  /boot
---> f 옵션을 생략하면 화면상에 결과가 출력된다.
      터미널의 프롬프트가 깨지면
      터미널을 종료후 다시 실행하면 된다.
#ls  /tmp/my*
---> f 옵션을 생략해서 파일이 생성되지 않는다.


#tar  cf  /tmp/my3.tar  /boot
---> v 옵션을 생략하면 처리과정이 자세히 출력되지 않는다.
#ls  /tmp/my*



#tar  cvf  /tmp/my5.tar  /boot
---> 옵션 사용시 - 생략 가능
#ls  /tmp/my*


#tar  cvzf  /tmp/boot.tar.gz  /boot
또는
#tar  -cvzf  /tmp/boot.tar.gz  /boot
--->/boot 디렉토리의 모든 내용을 /tmp 디렉토리에 boot.tar.gz 파일로 저장
--->tar 로 묶고 gzip 으로 압축이 한꺼번에 된다.

tar 옵션
z : gzip 사용
c : create
v : verbose
f : file
j : bzip2 사용
t : 목록 출력

#cd  /tmp
#ll  bo*  my*
#ls -hl  bo*  my*

#tar  tvzf  boot.tar.gz
t : 파일이 풀리는 것이 아니라 내용을 확인하는 옵션

tar 파일의 내용을 볼 때는  #tar  tvf  test.tar 형식을 사용
tar.bz2 파일의 내용을 볼 때는  #tar  tvjf  test.tar.bz2

#ls

※ tar.gz 파일은 gunzip 으로 압축을 풀고 
tar xvf 로 tar 파일을 풀 수도 있지만 
tar  xvzf  옵션을 이용하면 압축과 tar 해제가 한 번에 된다.


#tar  xvzf  boot.tar.gz
기본적으로 현재 디렉토리에 파일이 풀린다.
#ls  -d  bo*
boot


#tar  xvzf  boot.tar.gz
#tar  xvzf  boot.tar.gz  -k
기본적으로 덮어쓰기 하므로 기존 파일을 보존하려면 -k 옵션을 이용한다.

#man  tar
-k 옵션

       -k, --keep-old-files
              keep existing files; don’t overwrite them from archive


#pwd
/tmp
#ls  -d  bo*
boot.tar.gz

#gunzip  boot.tar.gz 
---> 압축해제
#ls  -d  bo*
boot.tar


#tar  xvf  boot.tar (타르 풀기)
---> 기본적으로 현재 디렉토리에 풀리고 다른 디렉토리에 
      풀려면 "-C 경로" 를 지정하면 된다.


#mkdir  /mywork
#tar  xvf  boot.tar  -C  /mywork
---> tar 파일이 /mywork 디렉토리에 풀린다.
---> -C (Change) 는 대문자이다.
#ls  /mywork



♠tar 와 bzip2 테스트

#tar  cvf  /tmp/boot2.tar   /boot
---> /boot 디렉토리의 모든 내용을 /tmp 의 boot2.tar 파일로 저장하기
---> 압축옵션이 없으므로 압축은 되지 않는다.

c : create
v : verbose
f : file

#pwd
/tmp
#ls  -dl  bo*


#bzip2  boot2.tar 
--->bzip2 로 압축(확장자 bz2 파일 생성)
#gzip  my1.tar 
--->gzip 으로 압축(확장자 gz 파일 생성)

#ls  -dl  bo*  my*
#ls  -dhl  bo*  my*
boot.tar  
boot2.tar.bz2  
my1.tar.gz
(h 옵션을 주면 킬로바이트,메가바이트 형태로 출력 된다.)

#bunzip2  boot2.tar.bz2 
---> 압축해제
#ls  -dhl  bo*
boot.tar  
boot2.tar

#tar  cvjf  /tmp/boot3.tar.bz2  /boot
---> tar 로 묶고 bzip2 로 압축
#pwd
/tmp
#ls  -dhl  bo*
boot.tar  
boot2.tar  
boot3.tar.bz2

#tar  xvjf  boot3.tar.bz2
---> 압축 해제하고 타르 풀기

#pwd
/tmp
#ls  -dhl  bo*
boot.tar  boot2.tar  boot3.tar.bz2


#gzip  boot2.tar 
--->gzip 으로 타르 파일 압축
#ls  -dhl  bo*
boot.tar  boot2.tar.gz  boot3.tar.bz2


#file   boot.tar
#file   boot2.tar.gz
#file   boot3.tar.bz2
---> file 명령을 이용하여 파일의 종류를 확인 할 수 있다.



☞GUI 를 이용한 tar 파일 만들기
/work 의 txt 파일을  /tmp/fedora.tar.gz 로 만들기

#file-roller
1) 위쪽 메뉴아이콘에서 "새로 만들기" 클릭
2) 위쪽의 이름: fedora 입력(확장자는 제외)
3) 압축 종류 에서 "gzip 으로 압축된 Tar" 선택
4) "다른 폴더 찾아보기" 클릭
5) 왼쪽의 파일시스템 더블클릭하고 오른쪽에서 /tmp 선택
6) "만들기" 버튼 클릭
7) 새로운창이 나타나면
   "더하기" 버튼을 누르고 원하는 파일을 선택후 종료하면 됨
    복수 파일을 선택할 때는 Ctrl 키 사용


▣실습
1. /bin 디렉토리의 모든 파일을 gzip 압축 및 tar 로 묶어서
/home 디렉토리 안에 binlist.tar.gz 라는 파일로 생성
2. binlist.tar.gz 압축만 풀기
3. binlist.tar 에 /etc/passwd 파일 추가하기(옵션확인)
4. 리눅스 웹브라우저 실행후 아래 주소 입력
http://httpd.apache.org/download.cgi

httpd-2.0.65.tar.bz2
httpd-2.0.65.tar.gz

5. 위의 파일을 다운받고(기본적으로 /root/다운로드 폴더에 다운 됨)
/work, /work2 디렉토리 없으면 생성하기
#mkdir  /work  /work2

6. /work 에 httpd-2.0.65.tar.gz 를 이동시키고 압축 및 타르 풀기
7. /work2 에 httpd-2.0.65.tar.bz2 를 이동시키고 압축 및 타르 풀기


/////////////////////////////////////////////////////////////////////
#tar  cvzf  /home/binlist.tar.gz  /bin
#cd  /home
#ls
#gunzip  binlist.tar.gz
#tar  --help  |  grep  append
-r , --append
#tar  rvf  binlist.tar  /etc/passwd
#tar  tvf  binlist.tar

/////////////////////////////////////////////////////////////////////


<배치 프로세스>
-일련의 작업을 몰아서 특정 시간에 실행시키는 것이며
터미널과의 입/출력 교류가 없다.
-중요하지 않은 작업을 시스템 사용률이 낮을 때 처리하는데 유용
-at 와 batch 명령어를 사용

at : 지정한 시간에 명령어 수행
batch : 시스템 부하 수준이 0.8 이하 일 때 명령 수행


#man at
at      지정한 시간에 명령을 실행한다.

예를 들어, 지금부터 3일후 오후 4시에 작업을 수행하려면 at 4pm + 3  days,
7 월  31일 오전 10:00에 작업을 수행하려면 at 10am Jul 31
내일 오후 1시에
작업을 수행하려면 at 1pm tomorrow 과 같이 하면 된다.



at 커맨드 형식 : at 옵션 TIME

#mkdir  /backup
#mkdir  /work19
#cp  /etc/hosts  /work19
#rdate  -s  time.bora.net
#date

#at  시간:분  today
at> /bin/tar  cvzf  /backup/at.tar.gz  /work19
at> touch  /attest.txt
at> <EOT> (---> ctrl + d 를 입력)

---> 리눅스 가상머신의 시간을 확인해서 현재 시간보다 3분 뒤로 설정하기


예약작업 대기목록 확인하기
#atq 
#at  -l
#at  -c  1
---> 1 은 atq 에서 출력된 예약 작업 번호를 적는다.

//////////////////////////////////////////////////////////////////////////
#man  at

       -m      출력 결과가 없더라도 작업이 완료될 때 사용자에게 메일을 보낸다.

       -f      file 표준 입력이 아닌 file 에서 작업 명령을 읽는다.

       -l      atq와동일

       -d      atrm과동일

       -c     명령행에 나열된 작업들을 표준 출력으로 보여준다.

//////////////////////////////////////////////////////////////////////////



#atq
---> 예약작업이 실행되었으면 출력되는 것이 없다.
(예약작업 수동 삭제는 #atrm 예약번호)

#cd  /backup
#ls
at.tar.gz 생성 확인










