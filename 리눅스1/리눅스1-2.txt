
[ITBANK Andylec 주말 리눅스 1 과정]

▣오늘의 수업내용(2일차)
리눅스 디렉토리 구조
리눅스 명령어 형식
매뉴얼, 도움말 확인 방법
리눅스 기본 명령어



▣리눅스 디렉토리구조
리눅스 메뉴표시줄-프로그램-시스템 도구-파일 브라우저 실행

1.리눅스는 설치를 하면 최상위 디렉토리(/ ---> 루트 디렉토리라고 읽는다.) 아래에 
비슷한 성격의 파일을 저장하고 있는 여러 디렉토리가 자동으로 생성된다.
디렉토리는 윈도우의 폴더이다.

2.리눅스는 대소문자를 구분한다.
(디렉토리 또는 파일 이름, 명령어, 명령어 옵션, 계정 등)
관리자 계정 루트는 소문자 root(대문자 ROOT 는 로그인이 안 된다.)

			                       /
                                               |
	+-----------------------------+---------------------------------------+
        |                                                                                         |
      boot    etc    usr    var   root   home   tmp   lib    dev   proc   media   

/boot : 커널 디렉토리(부팅 관련 파일)
/etc   : 시스템 설정파일 디렉토리
/usr   : 응용프로그램 디렉토리
/var   : 로그파일, 메일 디렉토리
/root  : 관리자 홈디렉토리
/home : 일반계정 홈디렉토리 베이스
/tmp  : 임시 디렉토리
/lib    : 라이브러리 디렉토리
/dev  : 장치파일 디렉토리
/proc : 프로세스 정보 디렉토리
/media, /mnt : cdrom 마운트 디렉토리


▣실행파일(명령어) 디렉토리
/bin 
essential binaries 
필수 명령어(All user = root + 일반유저)

/sbin 
system binaries
필수 관리자용(root) 명령어

/usr/bin
most user commands
대부분의 사용자 명령어

/usr/sbin
non essential binaries
비 필수적인 명령어(시스템 관리용)

/usr/local/bin 
local software
Linux OS 설치후에 추가된 프로그램 명령어


▣자격증 문제
LPIC(수업용).pdf 참조

327 번

▣파티션 설정 예
아래는 예를 든 것으로 서버의 성격과 하드디스크의 용량을 고려하여 
파티션 설정을 해 준다.
(하드디스크 용량을 100G 로 가정)

  1)네임서버(기본형)
    / (98%)
    swap (2%)

  2)web 서버, ftp 서버
    / (15%)
    swap (2%)
    /home (나머지)
  
  3)메일서버
    / (15%)
    swap (2%)
    /home (30%)
    /var (나머지)
  
  4)DB 서버
    / (15%)
    swap (2%)
    /usr/local (나머지)


▣리눅스 명령어(command) 형식

기본 형식)

#명령어  [옵션]  [인자값]

---> [ ] 부분은 생략 가능하며
명령어 와 옵션 인자값 구분은 스페이스바(공백) 로 구분을 해 주어야 한다.
명령어나 옵션 다음에 적는 단어를 argument, 인자값, 인수 라고 부른다.
옵션은 보통 - 를 지정하고 생략 가능한 경우도 있다.



▣리눅스 명령어 실행 형식 종류

1. 명령어 만 사용하는 경우
2. 명령어 옵션 을 사용하는 경우
3. 명령어 옵션 인자값 을 사용하는 경우
4. 한 줄에 여러 명령어 를 사용하는 경우

예1) #ls
예2) #ls  -l
예3) #ls  -l  /tmp
예4) #ls ; date

옵션은 - 를 한 번만 사용해도 되고 여러 번 사용해도 된다.
#ls  -a  -l
#ls  -al
#ls  -la

옵션의 순서는 변경할 수도 있으나 순서를 지켜야 하는 경우도 있다.


명령어에 대한 사용법 및 옵션은 man 또는 --help 사용해서 확인한다.

☞man 명령어
매뉴얼(설명서) 페이지 확인

☞--help 
도움말을 확인하는 옵션

☞형식
#man  옵션  리눅스명령어
#명령어  --help


예)
#man  ls
q  // 매뉴얼 종료

#man  -K  "print a calendar"
-K(대문자) // 키워드 지정 옵션
---> -K 다음에 지정한 문자열을 매뉴얼 페이지에서 검색
---> print a calendar 에서 공백이 여러 번 들어가면 안 되고 대소문자를 구분함

#man  -K  달력
--->한글 설명서가 있는 경우만 검색 됨

한/영 전환 : Ctrl + space


#ls  --help


▣명령어 연습
터미널 실행하기

#man  ls
--->터미널에서 man ls 를 입력후 엔터누르기
    (#은 입력하는 것이 아님)

---> ls 명령어에 대한 매뉴얼이 출력된다.
     ls 는 디렉토리 목록 확인 명령
     리눅스의 명령어는 .exe .com 등 확장자로 구분하지 않는다.


매뉴얼 페이지 확인 시 사용하는 키
1) 스페이스바 : next page
2) f(또는 ctrl + f) : next page
3) b(또는 ctrl + b) : previous page
4) 엔터 : next line
5) PageUp, PageDown, 화살표 키를 이용할 수 도 있다.
6) h : 매뉴얼 도움말(help) 출력(도움말 종료는 q)
7) -N 입력후 엔터 : 라인번호 출력
8) -n 입력후 엔터 : 라인번호 해제
9) G : 마지막 라인으로 이동
10) 1G 또는 소문자 1g : 첫번째 라인으로 이동
11) 100G(또는 100g) : 100 번 라인이 있는 페이지로 이동(G 는 Go 를 의미)
12) q : 매뉴얼 종료(quit)

☞whereis 명령어
실행파일 위치, 매뉴얼 파일 위치 출력

☞passwd : 암호(password)를 설정하거나 변경하는 명령어

#whereis  passwd
passwd: /usr/bin/passwd /etc/passwd /usr/share/man/man1/passwd.1.gz  (1번 설명서 파일) /usr/share/man/man5/passwd.5.gz (5번 설명서 파일)
#


#man  passwd
--->1번 설명서(명령어) 확인 

PASSWD(1)                       User utilities                       PASSWD(1)

NAME
       passwd - update a user’s authentication tokens(s)


#man  5  passwd
---> 5번 설명서(설정파일) 확인


▣매뉴얼의 종류(Section)

1. 사용자 명령 (User Commands)
2. 시스템 호출 (System Calls) 
3. C 라이브러리 함수 (C Library functions) 
4. 디바이스와 네트워크 인터페이스 (Devices and Network Interfaces) 
5. 파일 포맷 (File Formats) 
6. 게임과 데모 (Games and Demos) 
7. 환경, 테이블, 매크로 (Environments, Tables, and Macros) 
8. 시스템 관리 (Maintenance Commands) 

http://man.kldp.net/wiki/ManPage


1p : POSIX(유닉스 표준) 명령어


▣passwd 명령어(password)
-루트는 일반 계정의 암호를 변경할 수 있다.
-일반 계정은 자신의 암호만 변경할 수 있다.
-passwd 만 입력하면 현재 로그인한 계정의 암호가 변경된다.
-루트는 간단한 암호를 사용할 수 있다.
-일반 계정은 간단한 암호를 사용할 수 없다.

-루트 암호 변경
#passwd  또는  #passwd  root

-apple 계정 암호 변경
#passwd  apple
---> 암호 입력시 아무것도 안 보임
---> 암호 문자를 입력하고 엔터를 누르면 됨



▣인터넷 설정

#gedit   /etc/sysconfig/network-scripts/ifcfg-eth0
---> 리눅스 메모장 프로그램으로 네트워크 설정 파일을 열기


ONBOOT=yes

로 변경후 저장

#ifconfig

웹브라우저 실행후 인터넷 확인

저장후 인터넷 연결이 안 되면 아래 명령 실행후 확인

#service network restart




▣실습
1. passwd 명령과 옵션을 이용하여 apple 계정을 락시키고
root 로그아웃 한 후 apple 계정 로그인 안되는지 확인하기

man  passwd  또는  passwd  --help  이용하여 옵션 확인

2. 다시 root 로그인 후 apple 계정 락 해제시키고 apple 로그인 되는지 확인하기

-계정을 락(Lock) 시키면 락을 해제(Unlock)하기 전까지
로그인 할 수 없다.(인증 실패했다는 메시지 출력)


▣경로
1. 절대경로(Absolute Path, 최상위 디렉토리인 / 가 기준)
2. 상대경로(Relative Path, 현재 디렉토리가 기준)

.  (점 1개)  : 현재 디렉토리를 의미
.. (점 2개)  : 상위 디렉토리를 의미
~ (틸드)    : 현재 로그인한 사용자의 홈디렉토리를 의미



/////////////////////////////////////////////////////////////////////
경로 비교

C:\users\andy\test.txt
---> 윈도우 경로

/users/andy/test.txt
---> 리눅스 경로
/////////////////////////////////////////////////////////////////////



▣기본 명령어
1. pwd
   print working directory, 현재 작업 디렉토리의 전체경로 출력

2. clear
화면 지우기

3. cd
   change directory, 디렉토리 변경

#cd
디렉토리명을 지정하지 않으면 현재 사용자의 홈디렉토리로 이동된다.

#cd  디렉토리명
디렉토리명은 상대경로나 절대경로를 이용할 수 있다.


경로 연습 
#cd  /tmp
---> 절대 경로
#pwd
#cd  ..
---> 상대 경로
#pwd
#ls


#cd  /usr/local
---> 절대 경로
#pwd
#cd  ../../
---> 상대 경로
#pwd


4. ls  또는  dir
list, 디렉토리의 목록을 출력
옵션 : -l, -a, -F, -R, -d
    -l(long) 퍼미션, 소유권 등 자세한 정보 출력
    -a(all) 점으로 시작하는 숨김속성 파일도 출력
    -f 디스크에 저장된 순으로 출력
    -F(classify) 파일의 종류를 구분해서 출력
    -R(recursive) 하위 디렉토리를 구분해서 출력
    -r(reverse) 역순정렬(z - y - x ....  c - b - a)
    -d(directory) 경로안의 내용을 출력하지 않고 경로를 출력



#cd
#pwd
/root
#ls
#ls  -a
#ls  -F
---> 폴더(디렉토리)는 마지막에 / , 실행파일은 * 가 붙는다. 
       @ 는 심볼릭 링크 파일
#ls  -r
#ls  -R
#ls  /etc
---> 현재 폴더에서 다른 폴더 목록 출력
#ls  -d  /etc
---> 디렉토리(폴더) 이름만 출력
#ls  -dl  /etc (또는 ls  -ld  /etc  또는 ls  -l  -d  /etc)


5. mkdir  (make directory)
디렉토리 생성하기
옵션)
-p : 계층적으로 디렉토리 만들 때 사용(mkdir  -p  /a/b/c)

#mkdir  --help

#cd
#pwd
/root
#mkdir  /work
---> 최상위 디렉토리(/) 아래에 work 디렉토리가 생성된다.
      mkdir  work 로 실행하면 /root/work 디렉토리가 생성된다.

		  /
		  |
            root   work


#cd  /work
#pwd
/work
#touch  apple1.txt 
---> touch 는 빈파일(empty file) 을 만드는 명령어

#ls
#touch  apple2.txt  apple3.txt
#ls


#pwd
/work
#mkdir  /work22 
mkdir  work22 로 하면 현재 디렉토리 
즉, /work 안에 work22(/work/work22) 가 만들어진다.

	           /
	  work    work22

#ls  /
#ls  /work22
비어있음



6. cp
파일이나 디렉토리를 다른 파일 또는 다른 디렉토리로 복사(Copy)
물리적으로 새로운 파일이 생성됨

옵션)
-a : 원본 파일의 속성, 링크 파일 정보를 유지하며 복사(archive)
-b : 파일이 존재할 경우 기존 파일을 백업(backup)
-i : 복사할 대상이 있으면 질문 출력(interactive)
-r : 디렉토리 복사할 때 사용(recursive)
-v : 복사과정 자세히 출력(verbose)
-u : 복사할 대상의 변경 날짜가 같거나 더 최근 것이면 복사하지 않음(update)

사용 예)
#cp  파일명1(원본)  파일명2(대상)
#cp  파일명   디렉토리명
#cp  -r  디렉토리명1  디렉토리명2

▷모든 파일을 복사할 때는 * 를 이용할 수 있다. 
*.txt : txt 로 끝난 모든 파일을 의미

▷원본은 여러 개를 지정할 수 있지만
대상은 여러 개 지정 안 됨
cp  --help


#cp  /etc/hosts  /tmp/one.txt 
--->파일 이름을 변경하면서 복사
#ls  /tmp/*.txt

#cp  -v  /etc/hosts  /tmp/two.txt
---> /etc 폴더의 hosts 파일을 /tmp 폴더안에 two.txt 로 복사
#ls  /tmp/*.txt

#cp  -v  /etc/hosts  /tmp
--->동일한 파일 이름으로 복사
#ls  /tmp/ho*


7. mv  
move, 이름변경 및 이동

형식)
mv     원본파일(또는 디렉토리)명      대상파일(또는 디렉토리)명
대상파일명이 디렉토리로 존재하면 그 디렉토리 안으로 이동이 되고
존재하지 않으면 이름이 변경된다.
    
옵션)
-i  : 같은 이름의 파일이 있을 때 질문 출력
-f  : 동일 파일이 있을 때 확인 질문없이 강제로 덮어쓰기
-v  : 실행과정 자세히 출력
-b : 파일이 존재할 경우 기존 파일을 백업(backup)
-u : 복사할 대상의 변경 날짜가 같거나 더 최근 것이면 이동하지 않음(update)

▷디렉토리 복사 및 삭제 : -r(또는 -R) 옵션 사용

▷디렉토리 이동(mv) : -r 옵션 필요 없음


사용예)
    mv  a.txt  new.txt 
    (이름이 변경됨)
    mv  a.txt  b.txt  /work 
    (현재 디렉토리의 a.txt 와 b.txt 가 /work 디렉토리로 이동이 됨)
    mv  *.txt  /work


▷파일 이름변경
#cd  /work
#pwd
/work
#ls
apple3.txt
#mv  -v  apple3.txt  orange.txt
---> 이름 변경
#ls


▷이동 테스트
#pwd
/work
#ls
#ls   /tmp/*.txt
#mv  -v  orange.txt   /tmp
--->이동(현재 폴더 /work 의 orange.txt 가 /tmp 디렉토리로 이동 됨)
#ls
#ls   /tmp/*.txt
orange.txt 가 이동 된 것을 확인


8. rm  
remove, 파일 및 디렉토리 삭제
옵션) 
    -i(interactive) : 확인 질문 출력하는 옵션
    -r(recursive)  : 디렉토리 삭제시 사용
    -f(force)       : 확인 질문없이 강제 삭제시 사용

#cd  /work
#pwd
/work
#rm  apple1.txt
rm : 파일 삭제
질문 나올 때 엔터 또는 n 을 입력하면 삭제가 안되고 
y 를 입력하고 엔터를 쳐야 삭제 된다.

#ls
파일삭제 확인


#rm  -f  apple2.txt
-f   //force, 질문없이 강제 삭제
#ls
--->터미널에서 삭제할 때는 바탕화면의 휴지통으로 들어가지 않으므로
중요한 파일을 지울 때는 주의해야 한다.
--->중요한 파일은 다른 곳(다른 디렉토리,다른 하드디스크 등)에 
백업(저장)을 해 두는 것이 좋다.



9. rmdir  
remove directory, 디렉토리 삭제하기
(디렉토리가 비어 있지 않을 때는 
삭제되지 않으므로 rm  -rf 를 대신 사용하기도 한다.)

#cd  /work
#pwd
/work
#touch  apple3.txt
#ls
apple3.txt
#touch  /work22/apple5.txt
#ls  /work22

#rmdir  /work22
---> 디렉토리가 비어 있지 않으면 
      삭제되지 않는다.


#mkdir  /work23
#ls  /
#ls  /work23
#rmdir  /work23
#ls  /



#rm  /work22
rm: cannot remove directory `/work22': 디렉토리입니다
#

#rm  -r  /work22
--->비어 있지 않은 디렉토리를 지우려면 rm -r 을 이용할 수 있으나 확인 질문이 출력된다.


#rm  -rf  /work22
(rm  -r  -f  /work22 와 동일)
---> 질문없이 바로 삭제 : 사용할 때 주의

#ls  /

(주의 : rm -rf  /  하면 새로 설치해야 한다.)




/////////////////////////////////////////////////////////////////////
▷ascend
[동사](격식)오르다, 올라가다

The path started to ascend more steeply.
길이 더 가파르게 올라가기 시작했다.


▷descend
[동사](격식)내려오다, 내려가다

The plane began to descend.
비행기가 하강하기 시작했다.

/////////////////////////////////////////////////////////////////////


10. cat
파일의 내용을 화면에 출력

옵션)
-n : 라인 번호를 표시
-e : -vE 와 같음
-v : 개행문자, 탭키를 제외한 제어문자를 ^(캐럿) 형태로 표시 
-E : 각 행의 끝에 $ 표시
-T : tab 키를 ^I 로 출력
-A : -vET 옵션과 동일

사용 예)
#cat  파일명1
#cat  파일명1  파일명2  ...






#cat   /etc/hosts 
---> /etc 는 폴더명, hosts 는 파일명
#cat  -n  /etc/hosts
#cat  -A  /etc/hosts
#cat  /etc/hosts.allow
#cat  -A  /etc/hosts.allow


▣실습
1. /down 디렉토리를 생성하시오
2. /down 디렉토리에 test1.txt , test2.txt 파일을 생성하시오
3. /down 디렉토리에 있는 test1.txt , test2.txt   파일을 
각각 test3.txt , test4.txt 파일로 /tmp 디렉토리에 복사하시오
4. /backup 디렉토리 생성후 /boot 디렉토리를 /backup 으로 복사
5. /usr/sbin 폴더에서  group 으로 시작하는 파일만 /backup 디렉토리로 복사



//////////////////////////////////////////////////////
#mkdir  /down
#cd  /down
#pwd
/down
#touch  test1.txt  test2.txt
#cp   -v  test1.txt  /tmp/test3.txt
#cp   -v  test2.txt  /tmp/test4.txt
#ls  /tmp/*.txt
#mkdir  /backup
#cp  -r  /boot  /backup
#ls  /backup
#cp  /usr/sbin/group*  /backup

//////////////////////////////////////////////////////


















