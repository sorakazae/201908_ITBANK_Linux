
[ITBANK Andylec 주말 리눅스 2 과정]

▣오늘의 수업내용(2일차)
원격 접속 서비스(Remote Login Service)


▣실습준비
수업용 FTP 서버 900.가상머신 폴더에서 win2003.alz 를 
D:\2_주말반\공용 폴더에 다운받고 자신의 폴더에 압축풀기
(윈도우 탐색기 실행후 자신의 컴퓨터에 파일이 있으면 다운 생략)


<용어 정리>
☞서버(Server)
-회사에서 1년 내내 동작시키는 성능 좋은 컴퓨터를 의미하기도 하고 
-수업에서는 운영체제 상에서 특정 역할을 하는 프로그램을 의미한다. 
-서버프로그램이 동작하고 있는 컴퓨터가 서버 컴퓨터이다. 
-컴퓨터를 서버로 사용할 수 있도록 해 주는 운영체제 중의 하나가 리눅스이다.
▷웹서버 : 클라이언트에게 홈페이지 서비스를 제공하는 프로그램 또는 컴퓨터
▷ftp 서버 : 클라이언트에게 파일전송 서비스(업로드,다운로드)를 제공하는 프로그램 
	       또는 컴퓨터

☞클라이언트(Client)
-사전적 의미는 고객이지만 수업에서는 서버 컴퓨터를 이용하는 컴퓨터 또는 
프로그램 을 의미한다.
-주로 윈도우 7 이 설치된 컴퓨터가 해당되며 윈도우 7 상의 웹브라우저, alftp 도 
클라이언트라고 부른다.



☞포트 : 항구라고 비유할 수 있으며 네트워크를 사용하는 서비스 프로그램은
포트를 사용하며 프로그램 마다 포트번호가 틀리다.

[win7]                                             [linux]
웹브라우저 ----------------------------> 192.168.x.10:80 (아이피:포트)
알FTP       ----------------------------> 192.168.x.10:21
Putty        ----------------------------> 192.168.x.10:22


☞프로토콜(Protocol)
-프로토콜은 통신을 하기위한 약속이다. 
-컴퓨터간의 데이터가 전송되기 위해서는 프로토콜이 필요하다. 



▣TCP/IP 5 Layer Model
인터넷에 구현된 프로토콜 모델

------------------------
5 Layer  Application               [data]
------------------------
4 Layer  TCP/UDP              [h][data]  --->세그먼트(포트 정보)라 함
------------------------
3 Layer  IP/ICMP            [h][h][data]  --->패킷(아이피 정보)이라 함
---------- ARP--------
2 Layer  Ethernet        [h][h][h][data]  --->프레임(MAC 주소)이라 함
------------------------
1 Layer  Cable
------------------------

h 는 header(헤더,부가정보) 를 의미



▣택배전송

[송장번호][주소][이름][선물]


▣이더넷 프레임 전송

[Ethernet 헤더][IP 헤더][TCP 헤더][실제 Data]
     ^               ^                ^
      |                |                 |
MAC 주소         IP 주소         포트
(송신자,수신자)(송신자,수신자)(송신자,수신자)

--->케이블을 통해 데이타가 전송되는 형식이 위와 같다.


<패킷 캡춰 예>

04/07-15:09:24.767704 0:D0:CB:2C:B0:E -> 0:30:67:4:4D:DC type:0x800 len:0x42
192.168.33.1:57407 -> 192.168.33.10:1234 TCP TTL:122 TOS:0x0 ID:16740 IpLen:20 DgmLen:52 DF
******S* Seq: 0x3A3C7F0B  Ack: 0x0  Win: 0x2000  TcpLen: 32
TCP Options (6) => MSS: 1460 NOP WS: 8 NOP NOP SackOK

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.767750 0:30:67:4:4D:DC -> 0:D0:CB:2C:B0:E type:0x800 len:0x42
192.168.33.10:1234 -> 192.168.33.1:57407 TCP TTL:64 TOS:0x0 ID:0 IpLen:20 DgmLen:52 DF
***A**S* Seq: 0x21CE87B9  Ack: 0x3A3C7F0C  Win: 0x16D0  TcpLen: 32
TCP Options (6) => MSS: 1460 NOP NOP SackOK NOP WS: 7

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.789263 0:D0:CB:2C:B0:E -> 0:30:67:4:4D:DC type:0x800 len:0x3C
192.168.33.1:57407 -> 192.168.33.10:1234 TCP TTL:122 TOS:0x0 ID:16741 IpLen:20 DgmLen:40 DF
***A**** Seq: 0x3A3C7F0C  Ack: 0x21CE87BA  Win: 0x100  TcpLen: 20

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.802541 0:30:67:4:4D:DC -> 0:D0:CB:2C:B0:E type:0x800 len:0x5B
192.168.33.10:1234 -> 192.168.33.1:57407 TCP TTL:64 TOS:0x0 ID:30793 IpLen:20 DgmLen:77 DF
***AP*** Seq: 0x21CE87BA  Ack: 0x3A3C7F0C  Win: 0x2E  TcpLen: 20
54 65 73 74 20 2D 2D 2D 20 53 61 74 20 41 70 72  Test --- Sat Apr
20 30 37 20 31 35 3A 30 39 3A 32 34 20 4B 53 54   07 15:09:24 KST
20 32 30 31 32                                    2012

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.802902 0:30:67:4:4D:DC -> 0:D0:CB:2C:B0:E type:0x800 len:0x44
192.168.33.10:1234 -> 192.168.33.1:57407 TCP TTL:64 TOS:0x0 ID:30794 IpLen:20 DgmLen:54 DF
***AP**F Seq: 0x21CE87DF  Ack: 0x3A3C7F0C  Win: 0x2E  TcpLen: 20
0A 0D 0A 4C 69 6E 75 78 20 54 65 73 74 0A        ...Linux Test.

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.814600 0:D0:CB:2C:B0:E -> 0:30:67:4:4D:DC type:0x800 len:0x3C
192.168.33.1:57407 -> 192.168.33.10:1234 TCP TTL:122 TOS:0x0 ID:16742 IpLen:20 DgmLen:40 DF
***A**** Seq: 0x3A3C7F0C  Ack: 0x21CE87EE  Win: 0x100  TcpLen: 20

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.817553 0:D0:CB:2C:B0:E -> 0:30:67:4:4D:DC type:0x800 len:0x3C
192.168.33.1:57407 -> 192.168.33.10:1234 TCP TTL:122 TOS:0x0 ID:16743 IpLen:20 DgmLen:40 DF
***A***F Seq: 0x3A3C7F0C  Ack: 0x21CE87EE  Win: 0x100  TcpLen: 20

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

04/07-15:09:24.817585 0:30:67:4:4D:DC -> 0:D0:CB:2C:B0:E type:0x800 len:0x36
192.168.33.10:1234 -> 192.168.33.1:57407 TCP TTL:64 TOS:0x0 ID:0 IpLen:20 DgmLen:40 DF
***A**** Seq: 0x21CE87EE  Ack: 0x3A3C7F0D  Win: 0x2E  TcpLen: 20

=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+


▣netstat(network status)
라우팅 테이블 및 네트워크 연결 상태, 열린 포트를 확인하는 명령어

사용 옵션)
-n : 10진수의 수치정보로 결과 출력(number, numeric)
-r : 라우팅 정보를 출력
-t : tcp 프로토콜의 정보출력
-u : udp 프로토콜의 정보출력
-l : 현재 listen 되고 있는 소켓정보 출력
-p : 프로세스 정보출력
-a : all
-s : 통계


☞사용 예
#netstat  -ntlp
#netstat  -nulp  
#netstat  -atn
#netstat  -r
#netstat  -rn
#netstat  -s



//////////////////////////////////////////////////////////////////////////

http://linux.die.net/man/8/netstat

Output
Active Internet connections (TCP, UDP, raw)

Proto
The protocol (tcp, udp, raw) used by the socket. 

Recv-Q
The count of bytes not copied by the user program connected to this socket. 

Send-Q
The count of bytes not acknowledged by the remote host. 

Local Address
Address and port number of the local end of the socket. Unless the --numeric (-n) option is specified, the socket address is resolved to its canonical host name (FQDN), and the port number is translated into the corresponding service name. 

Foreign Address
Address and port number of the remote end of the socket. Analogous to "Local Address." 

State
The state of the socket. Since there are no states in raw mode and usually no states used in UDP, this column may be left blank. Normally this can be one of several values: 

ESTABLISHED 
The socket has an established connection. 
//////////////////////////////////////////////////////////////////////////


▣데몬
1. 메모리에 계속 상주하면서 특정 역할을 하는 프로그램(서비스,서버 프로그램)

2. 서버 컴퓨터에는 클라이언트가 요청한 서비스를 제공하기 위해 
서비스 프로세스(데몬)가 동작

3. 데몬은 메모리를 할당받아 사용되므로 효율적 관리가 필요

4. 데몬의 동작방식(서비스의 요청 빈도에 따라 구분)
1)  standalone  type(독립 방식)
    서비스 프로그램인 데몬이 메모리에 계속 상주하는 방식

2)  xinetd  type(수퍼서버 방식)
    매니저 프로그램인 xinetd(수퍼 서버라고도 함)만 실행되어 있고 
    서비스 프로그램은 필요할 때 로딩하는 방식
 

<xinetd>
수퍼서버 방식
평상시에는 xinetd 프로그램만 실행되어서
포트를 관리하다가 클라이언트의 요청이 있으면
특정 포트에 해당하는 프로그램을 메모리로 로딩해서 서비스하고
서비스 종료후 메모리에서 프로그램을 언로딩하는 방식

		 [xinetd] ---> 수퍼서버, 상위 프로그램
		      |
       +----------+----------+
       |               |             |
     telnet    서비스1     서비스2 ---> 하위서비스(데몬,프로그램)



[first]
패키지)
xinetd
---> 수퍼서버 프로그램
telnet
---> telnet 클라이언트 프로그램
telnet-server
---> telnet 서버 프로그램

#rpm  -qa  |  grep  xinetd
#rpm  -qa  |  grep  telnet


패키지가 없을 경우 yum 으로 설치하기
#yum  -y  install  xinetd  telnet-server  telnet


▣xinetd 서비스 설정파일 형식
xinetd 주설정 파일 : /etc/xinetd.conf
--->하위 서비스에 공통적으로 적용되는 설정파일

defaults
{
	     log_type             = SYSLOG daemon info
로깅 설정

	     log_on_failure      = HOST
로그인 실패시 로그에 호스트이름 기록

	     log_on_success     = PID HOST DURATION EXIT
로그인 성공시 로그에 프로세스 번호, 호스트 이름 등을 기록

	    cps                  =  50  10
초당 접속 제한수를 50 으로 하고 넘으면 10초 기다렸다가 다시 구동

	     instances            = 50
데몬의 최대갯수
}

includedir /etc/xinetd.d
하위 서비스 설정파일 디렉토리

▣xinetd 하위 서비스 설정파일 위치 :  /etc/xinetd.d/

형식
	service    서비스이름
	{
	   속성  =   값
	}

☞서비스 이름은 /etc/services 파일에 등록된 서비스이름을 사용해야  한다.
☞서비스에 따라 설정 파일에서 대소문자를 구분하는 경우도 있고 안 하는 경우도 
있으므로 미리 적혀있는 샘플대로 설정하면 된다.


▣속성 설명
flags
소켓같은 자원을 재사용하는 설정

socket_type
stream   :  tcp 기반의 서비스
dgram   :  udp 기반의 서비스

wait
단일 쓰레드, 멀티쓰레드에 대한 설정
tcp 서비스는 반드시 no 로 설정되어야 정상 서비스 된다.
udp 서비스는 yes 로 설정
no : 접속시 프로세스를 생성하여 처리한다.(대기시간이 없다)
yes : 1 개의 프로세스를 이용한다.(대기시간이 필요하다)



user
프로세스를 실행할 수 있는 사용자를 지정

server
xinetd 수퍼서버가 실행할 실제 서비스 프로그램 경로 및 이름

log_on_failure
로그에 남기는 설정

disable
telnet 서비스를 활성화 하려면 no 로 설정



/////////////////////////////////////////////////////////////////////

#man  xinetd

NAME
       xinetd - the extended Internet services daemon

       xinetd  starts  the  appropriate  server.
       Because  of  the  way  it  operates, xinetd (as well as inetd) is also
       referred to as a super-server.




☞telnet 패키지명

CentOS 5 버전
krb5-workstation
/etc/xinetd.d/krb5-telnet

CentOS 6 버전
telnet-server
/etc/xinetd.d/telnet

/////////////////////////////////////////////////////////////////////


<telnet 서비스>
원격지에서 리눅스 머신으로 로그인하여 명령어 작업을 할 수 있도록 해 주는 서비스
동작 방식 : xinetd 방식(수퍼 서버 방식)

telnet 설정파일 : /etc/xinetd.d/telnet
데몬 파일        :  /usr/sbin/in.telnetd

서비스 시작  : service  xinetd  start  또는  /etc/init.d/xinetd  start
서비스 종료  : service  xinetd  stop  또는  /etc/ini.td/xinetd  stop
서비스 재시작  : service  xinetd  restart  또는  /etc/init.d/xinetd  restart
서비스 상태  : service  xinetd  status  또는  /etc/ini.td/xinetd  status


☞telnet 서버 접속 방법 
1)윈도우즈에서는 Putty, Secure CRT 사용 또는 telnet 명령 사용
2)리눅스 터미널에서는 telnet 명령 사용

형식)
telnet   [아이피 또는 문자주소]  포트


[first]
#netstat  -ntlp  |  grep  23
telnet 서비스 포트 : 23

#cd  /etc/xinetd.d
#vi  telnet

disable  =  no
로 변경

#service  xinetd  status
#service  xinetd  restart
#service  xinetd  status
#netstat  -ntlp  |  grep  23





#ps  -ef  |  grep  telnet
---> 수퍼 서버 방식이므로 검색 안 됨

#passwd  apple
1234
1234

---> 테스트 계정 암호 설정

[second]
#yum  -y  install  telnet
---> 텔넷 클라이언트 프로그램 설치

/////////////////////////////////////////////////////////////////////
yum 사용시 lock 메시지가 출력되면
#rm  /var/run/yum.pid  한 후 다시 실행해 본다.
/////////////////////////////////////////////////////////////////////



#telnet   첫번째리눅스아이피
접속 중단은 ctrl + ]
telnet>quit 입력

apple  login
$who

접속 종료는 exit 입력

☞Putty 사용하기



☞telnet 루트 로그인 허용(권장 안함)
[first]
#cd  /etc/pam.d
#vi  remote
2번 라인 주석처리
#auth   required  pam_securetty.so

---> 서버 설정 파일이 아니므로 service  ~   restart 를 하지 않는다.

[second]
테스트

#telnet   첫번째리눅스아이피
root login test

▣실습
1. Second 리눅스에서  Telnet 서버 구축하기
2. First 리눅스에서 Second 리눅스로 Telnet 서비스 이용하여
apple 계정으로 로그인하기
3. $who 실행한 화면을 캡춰하여 실습게시판에 제출


/////////////////////////////////////////////////////////////////////
Telnet 응용 항목(/etc/xinetd.d/telnet 파일에 설정)
only_from : 접속을 허용할 곳 지정
no_access : 접속을 허용하지 않을 호스트나 네트워크 지정
access_times : 접근 가능 시간 지정(시간은 0~23, 분은 0~59)
banner : 접속시 표시 될 파일 지정

예)
only_from  =  192.168.10.20
access_times  =  0:00-23:59
/////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////

[second]
#yum  -y  install  xinetd  telnet-server
#cd  /etc/xinetd.d
#vi  telnet
disable = no 로 변경

#service  xinetd  restart
#netstat  -ntlp  |  grep  23

#passwd  apple
1234
1234

[first]
#telnet   아이피





배너(접속시 메시지) 출력
접속 시간 제한(PM 3시 ~ PM 8시 까지만 접속 허용)

[second]
#cd  /etc/xinetd.d
#vi  telnet
service   telnet
{
       기존 설정 그대로 두고 아래 내용 추가
       access_times   =   시간:분-시간:분
       banner           =   /work/telnet.txt
}
#mkdir  /work
#vi  /work/telnet.txt

Second  Telnet  Server

#service  xinetd  restart

/////////////////////////////////////////////////////////////////////



▣원격 접속 서비스(Remote Service)
1. TELNET
포트 : 23, 비암호화, 텍스트 방식

2. SSH
포트 : 22, 암호화, 텍스트 방식

3. VNC
그래픽(GUI 환경) 환경



▣암호화 방식
대칭키 방식과 비대칭키 방식이 있다.

1. 대칭키 방식 : 암호화 할 때와 복호화(암호해독) 할 때의 키가 똑같은 방식

		   key1(암호화)
	       ----------------->	
평문(안녕)                          암호문(@#%^&*)
	       <-----------------
		   key2(해독)
key1 = key2



2. 비대칭키 방식(OpenSSH 가 사용하는 방식)

			 public key(암호화)
		     -------------------------->
    평문(Hello)                                     암호문($ab!3)
		     <--------------------------
		   private key(복호화:암호해독)

public key 와 private key 는 동일하지 않다.

공개키 : public key
개인키(비밀키,사설키) : private key, secret key


평문   : Hello 와 같이 암호화 이전의 데이타
암호문 : $ab!3 과 같이 변환된 데이타(암호화는 수신자의 공개키로 한다.)


참조)
http://ko.wikipedia.org/wiki/RSA_%EC%95%94%ED%98%B8



▣SSH(Secure SHell)
암호화 통신을 하는 리모트 로그인 서비스

1. 패키지명 : openssh
#rpm  -qa  |  grep  openssh

패키지가 없으면 설치 :  #yum  -y  install  openssh

2. 디렉토리                : /etc/ssh
3. 서버 설정 파일         : sshd_config
4. 클라이언트 설정 파일 : ssh_config
5. 데몬 스크립트          : /etc/init.d/sshd
데몬 스크립트 : 서비스 프로그램을 시작 및 종료 시키는 역할을 하는 파일




<sshd_config 파일 항목>
#으로 시작하는 라인은 주석(설명) 또는 디폴트값을 뜻한다.
버전에 따라 라인 번호는 틀려질 수 있으므로 내용을 확인한다.

13 #Port 22 
ssh 포트

15 #ListenAddress  0.0.0.0
서비스에 사용할 주소 설정


21 Protocol 2
ssh 버전 설정


25 # HostKeys
암호화에 사용되는 키파일 위치 지정


30 #KeyRegenerationInterval 
동일한 키를 오랫동안 사용하지 않도록 하기 위한 서버의 키 재생성시간 설정

31 #ServerKeyBits 
서버 키의 비트 수를 정의

36 SyslogFacility 
로깅 facility(로그 기록 방식)
AUTHPRIV : 인증 절차에 관련된 메시지

37 #LogLevel 
로깅 레벨(로그 기록 수준)
emerg : 시스템이 다운되는 수준
crit : 서브시스템을 종료해야 하는 수준
warning : 경고 메시지 수준
info : 정보를 제공하는 수준


41 #LoginGraceTime 2m 
로그인 허용 대기시간-디폴트로 2분
10 으로 적으면 10초

42 #PermitRootLogin yes 
루트 로그인 허용 설정

43 #StrictModes 
로그인 전에 파일모드, 홈디렉토리 소유권 등을 체크하는 설정

44 #MaxAuthTries 6
로그인 실패시 재시도 허용 횟수

48 #PubkeyAuthentication yes
공개키 인증 허용 여부

49 #AuthorizedKeysFile        .ssh/authorized_keys
공개키 인증 사용시 공개키가 저장되어 있는 파일

64 #PasswordAuthentication
패스워드 인증 설정

65 #PermitEmptyPasswords
패스워드 인증을 할 때 빈 패스워드 사용 설정

112 #PrintMotd 
로그인 시에 /etc/motd 를 출력


129 #Banner none
접속시 보여줄 메시지 파일


<ssh 서비스 관리>
telnet 은 xinetd 이용

#ls  /etc/init.d

/etc/init.d/sshd  [start|stop|restart]

start //프로그램 시작
stop //프로그램 종료
restart //재시작, 종료후 시작
reload //설정파일을 다시 읽기
condrestart //프로그램이 실행중인 경우에만 재시작
status //프로그램 실행 여부 확인


1. 중지
service sshd stop
/etc/init.d/sshd stop

2. 시작
service sshd start
/etc/init.d/sshd start

3. 상태확인
service sshd status
/etc/init.d/sshd status


<ssh 클라이언트 명령어>
윈도우에서는 Putty, CRT 같은 프로그램을 사용할 수 있고
리눅스 터미널에서는 ssh 명령어를 이용할 수 있다.

1. ssh  192.168.x.10 
현재 로그인한 계정으로 접속

2. ssh  cent.andylec.com
현재 로그인한 계정으로 접속

3. ssh  apple@192.168.x.10
apple 계정으로 접속

4. ssh  -l  apple  192.168.x.10 
apple 계정으로 접속


<ssh 서버 테스트>
[first]
#netstat  -ntlp  |  grep  sshd
#netstat  -ntlp  |  grep  22

#cd  /etc/ssh
#vi  sshd_config
:set  nu

130 Banner  /work/ssh.banner

#mkdir  /work
#vi  /work/ssh.banner

First  SSH  Server

#service  sshd  restart
리눅스 서비스의 경우 설정 파일이 변경되면
서비스를 재시작 해 주어야 한다.


[second]
#ssh   첫번째리눅스아이피
질문에 yes 입력
루트 암호 입력
접속 종료는 exit 입력


#ssh  apple@첫번째리눅스아이피
apple 암호 입력
접속 종료는 exit 입력


☞루트 로그인 제한
[first]
#cd  /etc/ssh
#vi  sshd_config

42 PermitRootLogin  no
---> 라인 앞의 # 을 없애고 yes 를 no 로 수정

#service  sshd  restart
#netstat  -ntlp |  grep  sshd
#ps  -ef  |  grep  sshd


[second]
#ssh    첫번째리눅스아이피

결과 확인 후 Root Login Allow 설정하기


☞배너(Banner)

1. 로그인 전 배너
1)시스템 배너
/etc/issue : 로컬 로그인 배너
/etc/issue.net : 네트워크 로그인 배너(Telnet 사용, SSH 사용 안 함)


2)서비스 자체 배너
Telnet : /etc/xinetd/telnet 파일에 설정
SSH : /etc/ssh/sshd_config 파일에 설정


2. 로그인 후 배너
/etc/motd
---> Telnet, SSH 둘다 사용





[first]
#cat  /etc/issue
#cat  /etc/issue.net
#mkdir  /backup
#cp  /etc/iss*  /backup
#vi  /etc/issue

Local Login Banner

#vi  /etc/issue.net

Remote Login Banner

#vi  /etc/motd

Hello User !
Enjoy Linux







