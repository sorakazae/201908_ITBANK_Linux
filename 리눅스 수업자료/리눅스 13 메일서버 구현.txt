메일서버를 구현 하기 위한 전제 조건(다람쥐 웹 메일 포함)
1. Name-Caching Server 설치
2. DNS -> MX(Mail Exchange Server) 구축(SMTP 서버 검사)
3. yum -y install sendmail(stmp -> 보내는 메일 서버)
4. yum -y install dovecot(pop3, imap -> 받는 메일 서버) 
5. 메일 클라이언트 프로그램...
6. 웹 메일 구현 :  PHP 설치...
7. 
port 번호
dns -> tcp/udp : 53
smtp -> 25
pop3 -> 110
imap -> 143
8 데몬이름 
sendmail -> sendmail(stmp)
dovecot -> dovecot(pop,imap)
9 서비스 확인 하기 위해서 Telnet Server
Centos A 서버
yum -y install telnet-server 설치
vi /etc/xinetd.d/telnet
disable->yes ->no로 설정
데몬시작 : service xinetd start


★ 샌드 메일의 구현
사설 네트워크 
실습 조건 : 
메일 서버 2대, 메일 클라이언트  pc 2대, 네임서버 1대 총 5대의 컴퓨터로 설정
페도라 서버(네임서버) -> 192.168.0.100
페도라 서버(메일서버) ->192.168.0.100
mail.john.vm
캐시 DB
john.vm 존 파일 설정
bann.vm 존 파일 설정

페도라 서버B(메일서버)
mail.bann.vm

메일 클라이언트 
페도라 클라이언트 -> 192.168.0.201
윈도우즈 클라이언트 -> 192.168.0.202
		  라우터(게이트웨이)
		        |
	----------------인터넷 ----------------페도라 서버(네임서버) -> 192.168.0.100
        |						|
   192.168.0.200	192.168.0.100		캐시DB(ns.john.vm)bann.vm 존 파일 설정)
   페도라 서버B		페도라 서버
   (메일서버)		(메일서버)
   mail.bann.vm    mail.john.vm
       |                      |
    인터넷  		   인터넷
       |                      |
 192.168.0.201         192.168.0.202
페도라 클라이언트        원도우즈 클라이언트
(메일 클라이언트)	 (메일 클라이언트)
실습 \
메일 서버 환경을 구현 하기 위해서 john.vm 및 bann.vm 도메인을 관리하는 네임 서버를 구현하자
-----------------------------------------------------------
페도라 서버
1. mail.john.vm -> 호스트에 등록
#gedit /etc/hosts -> 192.168.0.100-> mail.john.vm
2. gedit /etc/mail/local-host-names
mail.john.vm -> 저장
3. 컴퓨터의 호스트이름 
gedit /etc/sysconfig/network
Hostname=mail.john.vm
4. service network restart
5. 로그오프 -> 로그인
페도라 서버B
1. mail.bann.vm -> 호스트에 등록
#vi /etc/hosts -> 192.168.0.200-> mail.bann.vm
2. vi /etc/mail/local-host-names
mail.bann.vm -> 저장
3. 컴퓨터의 호스트이름 
vi /etc/sysconfig/network
Hostname=mail.bann.vm
4. service network restart
5. logout -> 로그인 : root
--------------------------------------------------------------
페도라 서버
1. 네임서버 패키지 확인
rpm -qa caching-nameserver, rpm -qa bind
yum -y install bind
yum -y install caching-nameserver

2, 영역 생성 john.vm, bann.vm
gedit /etc/named.rfc1912.zones
zone "john.vm" IN {
	type master;cd 
	file "john.vm.zone";
	allow-update { none; };
};
zone "bann.vm" IN {
	type master;
	file "bann.vm.zone";
	allow-update { none; };
};
2 zone 파일 수정
cd /var/named/chroot/var/named/
ls
cp localhost.zone john.vm.zone
cp localhost.zone bann.vm.zone

3. gedit john.vm.zone
$TTL	86400
$ORIGIN	 john.vm.
@	IN SOA	@       root (
			42		; serial (d. adams)
			3H		; refresh
			15M		; retry
			1W		; expiry
			1D )		; minimum

	        IN NS		ns.john.vm.
	 	IN A		192.168.0.100
		IN AAAA		::1
		IN MX 10	mail.john.vm.
mail		IN A 		192.168.0.100
www		IN A		192.168.0.100	
ns		IN A		192.168.0.100	
gedit john.vm.zone

$TTL	86400
$ORIGIN	bann.vm.
@		IN SOA	@       root (
		42		; serial (d. adams)
		3H		; refresh
		15M		; retry
		1W		; expiry
		1D )		; minimum

	        IN NS		@
	 	IN A		192.168.0.200
		IN AAAA		::1
		IN MX 10	mail.bann.vm.
mail		IN A 		192.168.0.200

3. 영역에 대한 권한 설정
chmod 770 *.zone
chown root.named *.zone

4. service named restart
-system-config-securitylevel -> 방화벽 설정
---------------------------------------------------------------
5. system-config-network -> 192.168.0.100
service network restart

nslookup
>server 
192.168.0.100
>www.naver.com
>mail.john.vm
->named 서버가 자동으로 시작되지 않기때문에
system-config-services -> named 체크 -자동으로 시작
--------------------------------------------------------------
페도라 B 
DNS 세팅
VI  /etc/resolv.conf 
nameserver=192.168.0.100
service network restart
nslookup
>server
>mail.john.vm -> 192.168.0.100
>mail.bann.vm -> 192.168.0.200
----------------------------------------------------------
Send Mail 구현
1. sendmail ->smtp
, sendmail-cf, ->smtp 환경 설정 부분
dovecot ->pop3, imap4 ->받는 메일 서버 필수 패키지
2. rpm -qa | grep sendmail
   rpm -qa dovecot
 yum -y install sendmail
yum -y install  dovecot-> 설치
3.
 /etc/mail/local-host-names
mail.john.vm
john.vm

도메인 정보가 들어간다. test@john.vm 라는 메일 주소를 사용하고 싶으면 
@뒤의 john.vm을 이 파일에 설정한다.

virtusertable, virtusertable.db
가상 유저를 생성할때 사용한다. 하나의 서버에서 두개이상의 도메인을 운영하고
있을때 같은 아이디를 공유하고자 할 때 필요하다.

# cd /etc/mail

4.
# vi /etc/mail/sendmail.mc

TRUST_AUTH_MECH(`EXTERNAL DIGEST-MD5 CRAM-MD5 LOGIN PLAIN')dnl
define(`confAUTH_MECHANISMS', `EXTERNAL GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN PLAIN)dnl

앞에 dnl주석을 제거한다. 주석을 제거하면 sendmail의 SMTP AUTH기능이 활성화 된다. 즉 아이디와 패스워드가 맞으면 이서버를 통해서 메일을 보낼 수가 있다.

관련된 데몬으로는  saslauthd 데몬이 있다. 인증기능이 활성화 되더라도 아이디와
패스워드가 맞는지 수행할 프로그램이 필요하다. saslauthd가 바로 그러한 역할을 한다. saslauthd 는 다음과 같은 명령으로 실행한다.
# service saslauthd start




5 외부네트워크 또는 호스트에가 메일을 보낼 수 있도록 허가해 준다 .
gedit /etc/mail/access(릴레이 설정) 	

localhost.localdomain RELAY
localhost		   RELAY
127.0.0.1		   RELAY

john.vm		RELAY  john.vm 도메인에 대해 릴레이 허용
bann.vm		RELAY bann.vm 도메인애 대해 릴레이 허용
192.168.0	RELAY 192.168.0  번 대역에서 주소의 모든 컴퓨터에 대해서 릴레이 허용
혹시 이메일 통신이 안될 경우 
mail.john.vm
mail.bann.vm
추가
--------------------------------------------------------------------
위와 같이 허용

babo@	DISCARD  babo라는 메일 계정에 대해서 매일 거부(거부 메세지 안보내줌)
@daum.net REJECT	daum.net 메일 사용자의 매일 거부(거부 메세지 보여줌


access 변경 파일 적용 
makemap hash /etc/mail/access < /etc/mail/access

6. vi /etc/mail/sendmail.mc

DAEMON_OPTIONS(`Port=smtp,Addr=127.0.0.1, Name=MTA')dnl -> 기본적으로 샌드메일은 릴레이를 모두 허용하지 않기 때문에 아래와 같이
에서 다음과 같이 127.0.0.1을 제거한다. -> Addr=0.0.0.0 으로 변경하면 웹메일 사용시 모든 네트워크에서 편지 릴레이가 가능합니다.
DAEMON_OPTIONS(`Port=smtp,Addr=0.0.0.0, Name=MTA')dn -> 변경해주면 모든 네트워크의 릴레이를 허용합니다.
DAEMON_OPvi TIONS(`Port=smtp, Name=MTA')dnl
127.0.0.1은 서버 자기 자신을 가리킨다. 즉 위의 설정은 127.0.0.1 아이피만 MTA로서 동작을 하게 하는 것이고 결국, 이 옵션을 놔두면 외부에서 메일 자체를 발송 할수 없게된다. 옵션을 지우던지 아니면 127.0.0.1을 서버 공인아이피로 변경하면 된다.

우선 간단하게 인증기능을 활성화 하고 외부 ip에서도 메일을 발송 할수 있게
설정을 하였다. 이렇게 설정한 파일을 sendmail.cf 파일로 변환한다.
#m4 /etc/mail/sendmail.mc > /etc/mail/sendmail.cf
이제 모든 설정이 끝났다.
sendmail을 시작하면 메일서버로 이용 할 수 있다.
#/etc/init.d/sendmail start

다음 명령으로 데몬이 정상적으로 올라와 있는지 확인 할 수 있다.
#netstat -nlp | grep 25 ->STMP 포트

tcp        0      0 0.0.0.0:25                  0.0.0.0:*                   LISTEN      24276/sendmail: acc  
-> 위의 결과가 도출이 안되면 service sendmail restart
보이면 정상적으로 설정이 된것이다.

7.  POP3 서버 세팅하기

아웃룩을 통해서 메일을 발송하고 받는 경우를 생각해 보자.
지금까지 세팅으로는 아웃룩을 통해 메일을 발송 할 수 있는 서버를 설치한것이다.
수신된 메일을 받을 수 있도록 하려면 POP3나 IMAP 세팅이 되어 있어야 한다.

다양한 pop3 데몬들이 있지만 CentOS에는 dovecot을 이용해 pop3와 imap을 세팅 할 수 있다. 물론 기호에 따라 다른 pop3 데몬을 사용 할 수도 있다.
여기서는 dovecot을 이용해 pop3을 세팅 하려고 한다. 설치는 다음과 같이 쉽게 할 수 있다.

# yum install dovecot
환경을 설정한다.

# vi /etc/dovecot.conf

20번째 줄에
#protocols = imap imaps pop3 pop3s
protocols = imap imaps pop3 pop3s
로 수정한다.
39번째 줄에
#listen = [::]
listen = *
수정하여 모든 ip에서 접속 가능하도록 설정한다.

85번째 줄
#ssl_disable = no
ssl_disable = yes
설정한다

825번째 줄
#args = dovecot
주석을 해제한다. pam인증을 dovecot이라는 이름으로 사용하겠다는 
설정이다.

이제 설정이 모든 끝났다.
# /etc/init.d/dovecot start
로 서버를 시작한다.

# netstat -nlp | grep 110 ->pop3 포트
tcp        0      0 0.0.0.0:110                 0.0.0.0:*                   LISTEN      9101/dovecot 

110포트가 리슨되고 있는 것을 확인한다.

이제 아웃룩(MUA)을 통해 메일을 보내거나 받을 수 있는 모든 준비가 되었다.

마지막으로 메일 서버와 관련된 몇가지 용어를 짚고 넘어가도록 하자.

MTA(Mail Transfer Agent): 메일을 보내고 받을 수 있는 메일 서버 프로그램이다. 대표적인 MTA로는 리눅스에서 sendmail, qmail, postfix, exim등이 있고 윈도우에서는 익스체인지서버가 있다.

MUA(Mail User Agent): MTA에서 수신된 메일을 서버에서 찾아와 볼수 있는 프로그램이다. 대표적인 MUA로는 MS아웃룩이나, 아웃룩 익스프레스, 썬더버드 elm, pine등이 있다.

MDA(Mail Delivery Agent): MTA에서 수신된 메일을 유저의 메일박스나 MAILDIR로 옮겨주는 역할을 한다. procmail이나 maildrop등이 있다.

요약 정리하자면  MTA로 메일을 보내고 받고 MDA로 받은 메일을 서버에 저장하며 MUA로 서버에 저장된 메일을 내 PC로 가지고 온다.
6. 메일 사용자 계정 
useradd john
passwd  john
암호 : 암호1234.
7. sendmail 과 dovecot 데몬을 재시작
service sendmail restart
service dovecot restart

8. nysysv  입력해서 서비스 실행
saslauthd  체크
dovecot 체크
sendmail 체크 후 저장

9 system-config-services 
sendmail -> 기본적 체크
dovecot -> 서비스 체크해서 재시작


10. xp 
nslookup을 이용해서 nameserver 작동 여부 확인
c:\nslookup
>mail.john.vm -> 192.168.0.100
ping mail.john.vm

11. 아웃룩 익스프레스 실행
아웃룩 익스프레스 메뉴 -> 도구 -> 계정 -> 
--------------------------------------------------------------------





